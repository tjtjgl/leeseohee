/**

선택자 


◆ 필터 선택자
•Filter선택자에 사용되는 형식은 filter선택자 앞에 :(콜론)을 붙여 표현
•선택자에 의해 선택된 집합 중에서 다양한 필터를 사용해 
사용자의 조건에 맞는 태그를 다시 선택해 줌
 * 
 */
 
 
 function imgSize() {
	/* 같은 태그에 두 번 이상 속성 값을 지정할 때 한꺼번에 
	지정하는 방법
	1. 체이닝
	2. key value 형태
	*/
	
	$('img').css('width', '200px').css('height', '200px');	
/*	

	$('img').css({
		'width' : '200px', 'height':'200px'})
	
*/	
	
	/*
	
	$('img').css('width', '200px');
	$('img').css('height', '200px');
	*/
}

function idSelector() {
	// $('#selId').css('display', 'none');
	$('#selId').hide(); // hide 메서드
	
}

function classSelector() {
	$('.selClass').css('opacity', '0.5');
}

function includeSelector() {
	$("img[title*=02]").css('opacity', '0.2');
}

function changeImg() {
//	attr('속성이름'): 인수로 지정된 속성의 속성값을 얻어온다.
	console.log($('td > img').eq(5).attr('src'));
//	attr('속성이름', '속성값'): 인수로 지정된 속성의 속성값을 변경한다.
	$('td > img').eq(5).attr('src', './images/img05.jpg');
	$('td > span > img:eq(0)').removeAttr('src');
}

//	속성 선택자
//	태그와 태그에 지정된 속성 및 속성값으로 요소 찾기
//	태그이름[속성이름]: 지정된 속성을 가지고 있는 모든 요소를 선택한다.
//	태그이름[속성이름=문자열]: 속성 값이 지정된 문자열과 일치하는 모든 요소를 선택한다. 완전일치
//	태그이름[속성이름~=문자열]: 지정된 문자열이 공백을 경계로 포함된 모든 요소를 선택한다. 단어포함
//	태그이름[속성이름*=문자열]: 지정된 문자열이 포함되는 모든 요소를 선택한다. 문장포함
//	태그이름[속성이름$=문자열]: 지정된 문자열로 끝나는 모든 요소를 선택한다.
//	태그이름[속성이름^=문자열]: 지정된 문자열로 정확히 시작하는 모든 요소를 선택한다.
//	태그이름[속성이름!=문자열]: 지정된 문자열과 같지 않은 모든 요소를 선택한다.
//	태그이름[속성이름|=문자열]: 지정된 문자열-로 정확히 시작하는 모든 요소를 선택한다.

//	속성과 프로퍼티 설정
//	.attr(): 선택된 요소 집합의 첫 번째 요소로 지정된 속성 값을 리턴하거나 선택된 요소의 지정된 
//	         속성을 전달받은 값으로 설정한다.
//	.removeAttr(): 지정된 속성을 제거한다.
//	.prop(): 선택된 요소 집합의 첫 번째 요소로 지정된 프로퍼티 값을 리턴하거나 선택된 요소의 지정된
//	         프로퍼티를 전달받은 값으로 설정한다.
//	.removeProp(): 지정된 프로퍼티를 제거한다.

// att 와 property 차이
/*
attribute 는 html 문서 안에서의 정적인(바뀌지 않는) 속성 그 자체를 의미하고,
 property 는 html DOM 안에서 동적인(바뀌는) 속성(또는 그 값)을 의미합니다.
*/
// https://medium.com/hexlant/attribute-%EC%99%80-property-%EC%9D%98-%EC%B0%A8%EC%9D%B4-c6f1c91ba91



